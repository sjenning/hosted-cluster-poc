---
apiVersion: v1
kind: ServiceAccount
metadata:
    name: ca-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ca-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edit
subjects:
- kind: ServiceAccount
  name: ca-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ca-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ca-operator
  template:
    metadata:
      labels:
        app: ca-operator
    spec:
      containers:
      - image: ${CLI_IMAGE}
        imagePullPolicy: IfNotPresent
        name: ca-operator
        command:
        - /bin/bash
        args:
        - -c
        - |-
          #!/bin/bash
          set -e

          while(true); do
            # Use the internal cluster's kubeconfig to collect router CA
            # The need for this is a bug in the console component
            # https://bugzilla.redhat.com/show_bug.cgi?id=1764704
            export KUBECONFIG=/etc/kubernetes/kubeconfig
            if ! oc get cm -n openshift-config-managed router-ca -o jsonpath='{ .data.ca-bundle\.crt }' > /tmp/router.ca; then
               echo "Cannot fetch router-ca yet. Will continue to wait"
               sleep 30
               continue
            fi
            cat /etc/kubernetes/ca.crt /tmp/router.ca > /tmp/kcm.ca

            CHECKSUM="$(python -c "import hashlib;print hashlib.md5(open('/tmp/kcm.ca').read()).hexdigest()")"

            # Switch to the management cluster and apply latest CA
            unset KUBECONFIG
            export KCM_CA="$(cat /tmp/kcm.ca | base64 | tr -d '\n')"
            oc patch secret kube-controller-manager --type=json --patch "[{\"op\": \"replace\", \"path\": \"/data/ca.crt\", \"value\":\"${KCM_CA}\"}]"
            oc patch deployment kube-controller-manager  --type=json --patch "[{\"op\": \"replace\", \"path\": \"/spec/template/metadata/annotations\", \"value\":{\"ca-checksum\":\"${CHECKSUM}\"}}]"

            sleep 30
          done
        volumeMounts:
        - mountPath: /etc/kubernetes
          name: secret
          readOnly: true
      restartPolicy: Always
      serviceAccountName: ca-operator
      volumes:
      - name: secret
        secret:
          secretName: ca-operator-secret
