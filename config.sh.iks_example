# none, aws, or openstack
export PLATFORM=none

# namespace in the managed cluster in which to deploy the control plane
export NAMESPACE="${NAMESPACE:=hosted}"

# pre-create namespace and services to find clusterIP and nodePort
# use `create ns` instead of `new-project` in case management cluster in not OCP
if ! oc get ns ${NAMESPACE} &>/dev/null; then
  oc create ns ${NAMESPACE} >/dev/null
  oc project ${NAMESPACE} >/dev/null
  grep -v API_NODEPORT ./kube-apiserver/kube-apiserver-service.yaml | oc apply -f - >/dev/null
  grep -v API_CLUSTERIP ./openshift-apiserver/openshift-apiserver-service.yaml | oc apply -f - >/dev/null
fi

# the name external name on which to connect to the user cluster API server
# IMPACT: kube-apiserver cert generation and admin.kubeconfig server URL
export EXTERNAL_API_DNS_NAME=$(oc -n kube-system get cm ibm-cloud-cluster-ingress-info -o jsonpath='{.data.ingress-subdomain}')

# the external IP on which to connect to the user cluster API server
export EXTERNAL_API_IP_ADDRESS=$(dig +short ${EXTERNAL_API_DNS_NAME})

# the external port on which to connect to the user cluster API server
# IMPACT: admin.kubeconfig server URL
export EXTERNAL_API_PORT=$(oc get service kube-apiserver -o jsonpath='{.spec.ports[0].nodePort}')

# the cluster IP to use for openshift-apiserver
#export API_CLUSTERIP=172.30.0.20
export API_CLUSTERIP=$(oc get service openshift-apiserver -o jsonpath='{.spec.clusterIP}')

# OKD/OCP release image from which to get component image pull specs
export RELEASE_IMAGE=$(curl -s "https://origin-release.svc.ci.openshift.org/api/v1/releasestream/4.2.0-0.okd/latest" | jq -r .pullSpec)

# the base domain for the cluster
export BASE_DOMAIN=example.com

# the subdomain to be used for the ingress router
export INGRESS_SUBDOMAIN="apps.${BASE_DOMAIN}"

# apiserver csr hosts (can leave blank)
export EXTERNAL_PRIVATE_API_DNS_NAME="c100.private.containers.dev.cloud.ibm.com"
export EXTERNAL_API_DNS_NAME_EXTERNAL="c100-e.containers.dev.cloud.ibm.com"
export EXTERNAL_PRIVATE_API_DNS_NAME_EXTERNAL="c100-e.private.containers.dev.cloud.ibm.com"
export EXTERNAL_API_DNS_NAME_ENDPOINTS="$(echo $'"c100-1.containers.dev.cloud.ibm.com","c100-2.containers.dev.cloud.ibm.com","c100-3.containers.dev.cloud.ibm.com"')"
export EXTERNAL_PRIVATE_API_DNS_NAME_ENDPOINTS="$(echo $'"c100-1-1.private.containers.dev.cloud.ibm.com","c100-2-1.private.containers.dev.cloud.ibm.com","c100-3-1.private.containers.dev.cloud.ibm.com"')"
