kind: Deployment
apiVersion: apps/v1
metadata:
  name: kube-controller-manager
spec:
  replicas: ${REPLICAS}
  selector:
    matchLabels:
      app: kube-controller-manager
  template:
    metadata:
      labels:
        app: kube-controller-manager
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values: ["kube-controller-manager"]
              topologyKey: "kubernetes.io/hostname"
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values: ["kube-controller-manager"]
              topologyKey: "failure-domain.beta.kubernetes.io/zone"
      containers:
      - name: kube-controller-manager
        image: ${HYPERKUBE_IMAGE}
        command:
        - hyperkube
        - kube-controller-manager
        args:
        - "--openshift-config=/etc/kubernetes/config.yaml"
        - "--kubeconfig=/etc/kubernetes/kubeconfig"
        volumeMounts:
        - mountPath: /etc/kubernetes/
          name: secret
        - mountPath: /var/run/kubernetes
          name: certdir
        - mountPath: /var/log/kube-controller-manager
          name: logs
        workingDir: /var/log/kube-controller-manager
      volumes:
      - secret:
          secretName: kube-controller-manager
        name: secret
      - emptyDir: {}
        name: logs
      - emptyDir: {}
        name: certdir
